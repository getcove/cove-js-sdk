name: Release

on:
  push:
    branches:
      - develop
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  # Stage 1: Create Release PR when pushing to develop
  release-pr:
    name: Create Release PR
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Create Version PR
        uses: changesets/action@v1
        with:
          branch: main  # Target main branch for the PR
          commit: "chore: version packages"
          title: "chore: version packages"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Stage 2: Publish when merging to main
  publish:
    name: Publish to npm and Create Release
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    outputs:
      published: ${{ steps.changesets.outputs.published }}
      publishedPackages: ${{ steps.changesets.outputs.publishedPackages }}
    permissions:
      contents: write  # For creating tags and releases
      id-token: write  # For npm Provenance
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'
      
      - name: Install Dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Build Packages
        run: pnpm build
      
      - name: Create Release Pull Request or Publish
        id: changesets
        uses: changesets/action@v1
        with:
          publish: pnpm changeset publish --provenance --access public
          createGithubReleases: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  # Stage 3: Open a simple sync PR from main to develop
  sync-develop:
    name: Open sync PR main -> develop
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [publish]
    permissions:
      pull-requests: write
    steps:
      - name: Create Sync PR
        uses: actions/github-script@v7
        with:
          script: |
            try {
              const pr = await github.rest.pulls.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                base: 'develop',
                head: 'main',
                title: 'chore: sync main back to develop',
                body: 'Automated PR to merge `main` into `develop` after publish.'
              });
              core.info(`Created PR #${pr.data.number}`);
            } catch (error) {
              core.info(`Skipping PR creation: ${error.message}`);
            }

